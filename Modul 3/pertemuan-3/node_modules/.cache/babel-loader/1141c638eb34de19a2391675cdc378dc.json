{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\week 3\\\\pertemuan-3\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hello: \"World!\"\n    };\n  }\n\n  componentWillMount() {\n    console.log(\"componentWillMount()\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount()\");\n  }\n\n  changeState() {\n    this.setState({\n      hello: \"Geek!\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"GeeksForGeeks.org, Hello\", this.state.hello]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: this.changeState.bind(this),\n          children: \"Press Here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"shouldComponentUpdate()\");\n    return true;\n  }\n\n  componentWillUpdate() {\n    console.log(\"componentWillUpdate()\");\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate()\");\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/xampp/htdocs/week 3/pertemuan-3/src/index.js"],"names":["React","ReactDOM","Test","Component","constructor","props","state","hello","componentWillMount","console","log","componentDidMount","changeState","setState","render","bind","shouldComponentUpdate","nextProps","nextState","componentWillUpdate","componentDidUpdate","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAG;AAAV,KAAb;AACH;;AAEDC,EAAAA,kBAAkB,GAClB;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAEDC,EAAAA,iBAAiB,GACjB;AACIF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;;AAEDE,EAAAA,WAAW,GACX;AACI,SAAKC,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAG;AAAV,KAAd;AACH;;AAEDO,EAAAA,MAAM,GACN;AACI,wBACI;AAAA,8BACA;AAAA,+CAA8B,KAAKR,KAAL,CAAWC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,+BACC;AAAG,UAAA,OAAO,EAAE,KAAKK,WAAL,CAAiBG,IAAjB,CAAsB,IAAtB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EACrB;AACIT,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,WAAO,IAAP;AACH;;AAEDS,EAAAA,mBAAmB,GACnB;AACIV,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AAEDU,EAAAA,kBAAkB,GAClB;AACIX,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AA/C8B;;AAiDnCT,QAAQ,CAACa,MAAT,eACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React from 'react'; \nimport ReactDOM from 'react-dom'; \n  \nclass Test extends React.Component { \n    constructor(props) \n    { \n        super(props); \n        this.state = { hello : \"World!\" }; \n    } \n  \n    componentWillMount() \n    { \n        console.log(\"componentWillMount()\"); \n    } \n  \n    componentDidMount() \n    { \n        console.log(\"componentDidMount()\"); \n    } \n  \n    changeState() \n    { \n        this.setState({ hello : \"Geek!\" }); \n    } \n  \n    render() \n    { \n        return ( \n            <div> \n            <h1>GeeksForGeeks.org, Hello{ this.state.hello }</h1> \n            <h2> \n             <a onClick={this.changeState.bind(this)}>Press Here!</a> \n            </h2> \n            </div>); \n    } \n  \n    shouldComponentUpdate(nextProps, nextState) \n    { \n        console.log(\"shouldComponentUpdate()\"); \n        return true; \n    } \n  \n    componentWillUpdate() \n    { \n        console.log(\"componentWillUpdate()\"); \n    } \n  \n    componentDidUpdate() \n    { \n        console.log(\"componentDidUpdate()\"); \n    } \n}  \nReactDOM.render( \n    <Test />, \n    document.getElementById('root')); \n"]},"metadata":{},"sourceType":"module"}